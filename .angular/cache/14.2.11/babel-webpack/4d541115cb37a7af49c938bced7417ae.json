{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./account.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\n\nconst _c0 = function (a0) {\n  return [a0];\n};\n\nfunction AccountListComponent_ng_container_8_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\");\n    i0.ɵɵelementStart(4, \"td\")(5, \"button\", 3);\n    i0.ɵɵtext(6, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function AccountListComponent_ng_container_8_tr_1_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const account_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.deleteAccount(account_r3.id));\n    });\n    i0.ɵɵtext(8, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const account_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", account_r3.accountNumber, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, account_r3.id));\n  }\n}\n\nfunction AccountListComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AccountListComponent_ng_container_8_tr_1_Template, 9, 4, \"tr\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const accounts_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", accounts_r1);\n  }\n}\n\nexport class AccountListComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n  }\n\n  ngOnInit() {\n    this.loadAccounts();\n  }\n\n  deleteAccount(accountId) {\n    this.accountService.deleteAccount(accountId);\n    this.loadAccounts();\n  }\n\n  loadAccounts() {\n    this.accounts$ = this.accountService.getAccounts();\n  }\n\n}\n\nAccountListComponent.ɵfac = function AccountListComponent_Factory(t) {\n  return new (t || AccountListComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n};\n\nAccountListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountListComponent,\n  selectors: [[\"app-account-list\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[\"routerLink\", \"/add-account\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [3, \"click\"]],\n  template: function AccountListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"a\", 0);\n      i0.ɵɵtext(1, \"Add\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\")(3, \"tr\")(4, \"td\");\n      i0.ɵɵtext(5, \"Account Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"td\");\n      i0.ɵɵtext(7, \"Actions\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, AccountListComponent_ng_container_8_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵpipe(9, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(9, 1, ctx.accounts$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i3.RouterLinkWithHref, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;IAeQA,2BAAqC,CAArC,EAAqC,IAArC;IACMA;IAAJA;IACAA;IACAA,2BAAI,CAAJ,EAAI,QAAJ,EAAI,CAAJ;IACsCA;IAAIA;IACxCA;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,mDAAT;IAAkC,CAAlC;IAAoCA;IAAMA;;;;;IAJhDA;IAAAA;IAGMA;IAAAA;;;;;;IALdA;IACEA;IAQFA;;;;;IAR0BA;IAAAA;;;;AAYhC,OAAM,MAAOC,oBAAP,CAA2B;EAI/BC,YAAoBC,cAApB,EAAkD;IAA9B;EACnB;;EAEDC,QAAQ;IACN,KAAKC,YAAL;EACD;;EAEDC,aAAa,CAACC,SAAD,EAAkB;IAC7B,KAAKJ,cAAL,CAAoBG,aAApB,CAAkCC,SAAlC;IACA,KAAKF,YAAL;EACD;;EAEOA,YAAY;IAClB,KAAKG,SAAL,GAAiB,KAAKL,cAAL,CAAoBM,WAApB,EAAjB;EACD;;AAlB8B;;;mBAApBR,sBAAoBD;AAAA;;;QAApBC;EAAoBS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAnB7Bd;MAA6BA;MAAGA;MAChCA,8BAAO,CAAP,EAAO,IAAP,EAAO,CAAP,EAAO,IAAP;MAEQA;MAAcA;MAClBA;MAAIA;MAAOA;MAEbA;;MAUFA;;;;MAViBA;MAAAA","names":["i0","AccountListComponent","constructor","accountService","ngOnInit","loadAccounts","deleteAccount","accountId","accounts$","getAccounts","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/chungmanwon/dev/projects/Angular/myAJKBankDemo/src/app/accounts/account-list.component.ts"],"sourcesContent":["import {Component, OnInit} from \"@angular/core\";\nimport {AccountService} from \"./account.service\";\nimport {Observable} from \"rxjs\";\nimport {Account} from \"./account.model\";\n\n@Component({\n  selector: 'app-account-list',\n  template: `\n    <a routerLink=\"/add-account\">Add</a>\n    <table>\n      <tr>\n        <td>Account Number</td>\n        <td>Actions</td>\n      </tr>\n      <ng-container *ngIf=\"accounts$ | async as accounts\">\n        <tr *ngFor=\"let account of accounts\">\n          <td>{{ account.accountNumber }}\n          <td>\n          <td>\n            <button [routerLink]=\"[account.id]\">Edit</button>\n            <button (click)=\"deleteAccount(account.id)\">Delete</button>\n          </td>\n        </tr>\n      </ng-container>\n    </table>\n  `\n})\nexport class AccountListComponent implements OnInit {\n\n  accounts$: Observable<Account[]> | undefined;\n\n  constructor(private accountService: AccountService) {\n  }\n\n  ngOnInit() {\n    this.loadAccounts();\n  }\n\n  deleteAccount(accountId: number) {\n    this.accountService.deleteAccount(accountId);\n    this.loadAccounts();\n  }\n\n  private loadAccounts() {\n    this.accounts$ = this.accountService.getAccounts();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}