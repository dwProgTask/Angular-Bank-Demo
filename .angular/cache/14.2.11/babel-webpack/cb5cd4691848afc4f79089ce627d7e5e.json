{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./card.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nconst _c0 = function (a2) {\n  return [\"/cards/addMoney\", \"add\", a2];\n};\n\nconst _c1 = function (a2) {\n  return [\"/cards/sendMoney\", \"send\", a2];\n};\n\nfunction CardComponent_ng_container_19_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"td\");\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"td\");\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"td\");\n    i0.ɵɵelementStart(10, \"td\")(11, \"button\", 3);\n    i0.ɵɵtext(12, \"Add Money\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 3);\n    i0.ɵɵtext(15, \"send Money\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const card_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", card_r3.cardBank, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", card_r3.cardNumber, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", card_r3.cardBalance, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(5, _c0, card_r3.id));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c1, card_r3.id));\n  }\n}\n\nfunction CardComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CardComponent_ng_container_19_tr_1_Template, 16, 9, \"tr\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const cards_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", cards_r1);\n  }\n}\n\nexport class CardComponent {\n  constructor(cardServce, router) {\n    this.cardServce = cardServce;\n    this.router = router;\n  }\n\n  ngOnInit() {\n    this.cards$ = this.cardServce.getCards();\n  }\n\n}\n\nCardComponent.ɵfac = function CardComponent_Factory(t) {\n  return new (t || CardComponent)(i0.ɵɵdirectiveInject(i1.CardService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CardComponent,\n  selectors: [[\"app-card\"]],\n  decls: 21,\n  vars: 3,\n  consts: [[\"routerLink\", \"/add-Card\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"routerLink\"]],\n  template: function CardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \" my Cards \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"a\", 0);\n      i0.ɵɵtext(3, \"Add A Card\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\")(5, \"tr\")(6, \"td\");\n      i0.ɵɵtext(7, \"Bank\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"td\");\n      i0.ɵɵelementStart(9, \"td\");\n      i0.ɵɵtext(10, \"Card Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"td\");\n      i0.ɵɵelementStart(12, \"td\");\n      i0.ɵɵtext(13, \"Balance\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"td\");\n      i0.ɵɵelementStart(15, \"td\");\n      i0.ɵɵtext(16, \"Add $\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"td\");\n      i0.ɵɵtext(18, \"Send $\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(19, CardComponent_ng_container_19_Template, 2, 1, \"ng-container\", 1);\n      i0.ɵɵpipe(20, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(20, 1, ctx.cards$));\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i2.RouterLinkWithHref, i3.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;IAuBMA,2BAA+B,CAA/B,EAA+B,IAA/B;IACMA;IAAJA;IACAA;IACAA;IAAIA;IAAJA;IACAA;IACAA;IAAIA;IAAJA;IACAA;IACAA,4BAAI,EAAJ,EAAI,QAAJ,EAAI,CAAJ;IAC2EA;IAASA;IAIpFA,4BAAI,EAAJ,EAAI,QAAJ,EAAI,CAAJ;IAC6EA;IAAUA;;;;;IAZnFA;IAAAA;IAEAA;IAAAA;IAEAA;IAAAA;IAGoBA;IAAAA;IAKAA;IAAAA;;;;;;IAd5BA;IACEA;IAgBFA;;;;;IAhBuBA;IAAAA;;;;AAqB3B,OAAM,MAAQC,aAAR,CAAqB;EAIzBC,YAAqBC,UAArB,EACqBC,MADrB,EACmC;IADd;IACA;EACpB;;EAEDC,QAAQ;IACN,KAAKC,MAAL,GAAc,KAAKH,UAAL,CAAgBI,QAAhB,EAAd;EACD;;AAVwB;;;mBAAbN,eAAaD;AAAA;;;QAAbC;EAAaO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAnCvBZ;MAAKA;MAASA;MACdA;MAA0BA;MAAUA;MACtCA,8BAAO,CAAP,EAAO,IAAP,EAAO,CAAP,EAAO,IAAP;MAEQA;MAAIA;MACRA;MACAA;MAAIA;MAAWA;MACfA;MACAA;MAAIA;MAAOA;MACXA;MACAA;MAAIA;MAAKA;MACTA;MAAIA;MAAMA;MAEZA;;MAkBFA;;;;MAlBiBA;MAAAA","names":["i0","CardComponent","constructor","cardServce","router","ngOnInit","cards$","getCards","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/chungmanwon/dev/projects/Angular/myAJKBankDemo/src/app/cards/card.component.ts"],"sourcesContent":["import {Component, OnInit} from \"@angular/core\";\nimport {Observable} from \"rxjs\";\nimport {CardService} from \"./card.service\";\nimport {Card} from \"./card.model\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector:'app-card',\n  template:`\n    <h1> my Cards </h1>\n    <a routerLink=\"/add-Card\">Add A Card</a>\n  <table>\n    <tr>\n      <td>Bank</td>\n      <td></td>\n      <td>Card Number</td>\n      <td></td>\n      <td>Balance</td>\n      <td></td>\n      <td>Add $</td>\n      <td>Send $</td>\n    </tr>\n    <ng-container *ngIf=\"cards$ | async as cards\">\n      <tr *ngFor=\"let card of cards\">\n        <td>{{card.cardBank}}\n        <td></td>\n        <td>{{ card.cardNumber}}\n        <td></td>\n        <td>{{card.cardBalance}}\n        <td></td>\n        <td>\n          <button type=\"button\" [routerLink]=\"['/cards/addMoney', 'add', card.id]\">Add Money</button>\n\n        </td>\n\n        <td>\n          <button type=\"button\" [routerLink]=\"['/cards/sendMoney', 'send', card.id]\">send Money</button>\n        </td>\n      </tr>\n    </ng-container>\n  </table>`,\n\n})\n\nexport  class CardComponent implements OnInit{\n\n  cards$: Observable<Card[]> | undefined;\n\n  constructor(private  cardServce: CardService,\n              private  router: Router) {\n  }\n\n  ngOnInit() {\n    this.cards$ = this.cardServce.getCards();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}