{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./balance.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction BalanceComponent_ng_container_10_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4, \"why not sowing\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const balance_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(balance_r3.accountNumber);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(balance_r3.totalBalance);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(balance_r3.id);\n  }\n}\n\nfunction BalanceComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BalanceComponent_ng_container_10_tr_1_Template, 9, 3, \"tr\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const balances_r1 = ctx.ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", balances_r1);\n  }\n}\n\nexport class BalanceComponent {\n  constructor(balanceService) {\n    this.balanceService = balanceService;\n  }\n\n  ngOnInit() {}\n\n}\n\nBalanceComponent.ɵfac = function BalanceComponent_Factory(t) {\n  return new (t || BalanceComponent)(i0.ɵɵdirectiveInject(i1.BalanceService));\n};\n\nBalanceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: BalanceComponent,\n  selectors: [[\"app-balance\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function BalanceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \" my Balance \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\")(3, \"tr\")(4, \"td\");\n      i0.ɵɵtext(5, \"Account Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"td\");\n      i0.ɵɵtext(7, \"Balance\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"td\");\n      i0.ɵɵtext(9, \"Actions\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, BalanceComponent_ng_container_10_Template, 2, 1, \"ng-container\", 0);\n      i0.ɵɵpipe(11, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(11, 1, ctx.balances$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAkBQA,2BAAqC,CAArC,EAAqC,IAArC;IACMA;IAA0BA;IAC9BA;IAAIA;IAAcA;IAClBA;IAAIA;IAAyBA;IAC7BA;IAAIA;IAAeA;;;;;IAHfA;IAAAA;IAEAA;IAAAA;IACAA;IAAAA;;;;;;IALRA;IACEA;IAMFA;;;;;IAN0BA;IAAAA;;;;AAiBhC,OAAM,MAAOC,gBAAP,CAAuB;EAI3BC,YAAoBC,cAApB,EAAkD;IAA9B;EACnB;;EAEDC,QAAQ,IACP;;AAR0B;;;mBAAhBH,kBAAgBD;AAAA;;;QAAhBC;EAAgBI;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MA1BzBT;MAAKA;MAAWA;MAEhBA,8BAAO,CAAP,EAAO,IAAP,EAAO,CAAP,EAAO,IAAP;MAEQA;MAAcA;MAClBA;MAAIA;MAAOA;MACXA;MAAIA;MAAOA;MAEbA;;MAUDA;;;;MAVgBA;MAAAA","names":["i0","BalanceComponent","constructor","balanceService","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/chungmanwon/dev/projects/Angular/myAJKBankDemo/src/app/balance/balance.component.ts"],"sourcesContent":["import {Component, OnInit} from \"@angular/core\";\nimport {BalanceService} from \"./balance.service\";\nimport {Observable} from \"rxjs\";\nimport {Balance} from \"./balance.model\";\n\n\n@Component({\n  selector:'app-balance',\n  template: `\n    <h1> my Balance </h1>\n\n    <table>\n      <tr>\n        <td>Account Number</td>\n        <td>Balance</td>\n        <td>Actions</td>\n      </tr>\n      <ng-container *ngIf=\"balances$ | async as balances\">\n        <tr *ngFor=\"let balance of balances\">\n          <td>{{ balance.accountNumber}}</td>\n          <td>why not sowing</td>\n          <td>{{ balance.totalBalance}}</td>\n          <td>{{ balance.id}}</td>\n        </tr>\n      </ng-container>\n\n\n     </table>\n`\n\n\n\n\n})\n\nexport class BalanceComponent implements OnInit{\n\n  balances$: Observable<Balance[]> | undefined;\n\n  constructor(private balanceService: BalanceService) {\n  }\n\n  ngOnInit() {\n  }\n}\n"]},"metadata":{},"sourceType":"module"}